@page "/";
@page "/days";
@namespace DailyActionCycle.WebUI.Components.Pages.Days

@using DailyActionCycle.WebUI.Services
@inject CurrentRouteService CurrentRouteService

<MudSwipeArea OnSwipe="@HandleSwipe">

    <MudPaper>
    
        <MudTabs MinimumTabWidth="20px" Color="Color.Primary" Centered=true ActivePanelIndexChanged="IndexChanged" ActivePanelIndex="activeIndex">
            @foreach (var day in DaysOfWeek)
            {
                var dayNumber = day.ToString("dd");
                var isToday = day.Date == DateTime.Today.Date;

                <MudTabPanel Text="@($"{dayNumber}")"
                            BadgeData="@(isToday ? string.Empty : null)"
                            BadgeDot="@(isToday ? true : false)"
                            BadgeColor="@(isToday ? Color.Success : Color.Default)">
                    <MudPaper Elevation="0">
                        <Day Date="day" />                        
                    </MudPaper>
                </MudTabPanel>
            }
        </MudTabs>

    </MudPaper>

</MudSwipeArea>

@code {
    private DateTime _startOfWeek = DateTime.Now.StartOfWeek(DayOfWeek.Monday);
    private List<DateTime> DaysOfWeek => Enumerable.Range(0, 7).Select(offset => _startOfWeek.AddDays(offset).Date).ToList();
    private bool showNextDays = false;

    int activeIndex = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        activeIndex = DaysOfWeek.IndexOf(DateTime.UtcNow.Date);
        CurrentRouteService.SetCurrentRoute(DateTime.UtcNow.ToLongDateString());
    }
    
    private void IndexChanged(int i)
    {
        activeIndex = i;
        CurrentRouteService.SetCurrentRoute(DaysOfWeek[i].ToLongDateString());
    }

    private async void HandleSwipe(SwipeDirection direction)
    {
        
        if (direction == SwipeDirection.RightToLeft)
        {
            _startOfWeek = _startOfWeek.AddDays(7);
        }
        else
        {
            _startOfWeek = _startOfWeek.AddDays(-7);
        }
        
        activeIndex = 0;
        CurrentRouteService.SetCurrentRoute(DaysOfWeek[activeIndex].ToLongDateString());
        StateHasChanged();
    }
}
